(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e,n,r,o,i,u,c,a,l,s,f){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._selector=f,this._name=e,this._link=n,this._handleCardClick=c,this._addLikeFunction=s,this._removeLikeFunction=l,this._handleDeleteButtonClick=a,this._cardId=r,this._ownerId=o,this._userId=u,this._likes=i}var n,r;return n=t,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._selector).content.querySelector(".element").cloneNode(!0)}},{key:"deleteHandler",value:function(){this._element.remove(),this._element=null}},{key:"_setListeners",value:function(){var e=this;this._likeButton.addEventListener("click",(function(){return e._changeLikeState()})),this._checkId()&&(this._element.querySelector(".element__delete").classList.add("element__delete_visible"),this._element.querySelector(".element__delete").addEventListener("click",(function(){return e._handleDeleteButtonClick(e)}))),this._image.addEventListener("click",(function(){return e._handleCardClick(e._name,e._link)}))}},{key:"id",value:function(){return this._cardId}},{key:"_changeLikeState",value:function(){this._likeButton.classList.contains("element__like_active")?this._removeLikeFunction(this._cardId):this._addLikeFunction(this._cardId)}},{key:"switchLikes",value:function(e){this._likeButton.classList.toggle("element__like_active"),this._element.querySelector(".element__like-count").textContent=e}},{key:"_checkOwnLike",value:function(){var e=this;this._likes.forEach((function(t){t._id==e._userId&&e._likeButton.classList.add("element__like_active")}))}},{key:"_checkId",value:function(){return this._userId==this._ownerId}},{key:"getElement",value:function(){return this._element=this._getTemplate(),this._likeButton=this._element.querySelector(".element__like"),this._element.querySelector(".element__title").textContent=this._name,this._image=this._element.querySelector(".element__image"),this._image.src=this._link,this._image.alt=this._name,this._setListeners(),this._element.querySelector(".element__like-count").textContent=this._likes.length,this._checkOwnLike(),this._element}}])&&e(n.prototype,r),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}const r=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._formElement=n,this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass}var t,r;return t=e,(r=[{key:"_showInputError",value:function(e,t){var n=this._formElement.querySelector("#".concat(e.id,"-error"));n.textContent=t,n.classList.add(this._errorClass)}},{key:"hideInputError",value:function(e){var t=this._formElement.querySelector("#".concat(e.id,"-error"));t.textContent="",t.classList.remove(this._errorClass)}},{key:"_getErrorMessage",value:function(e){return e.validationMessage}},{key:"_checkInputValidity",value:function(e){if(e.validity.valid)this.hideInputError(e);else{var t=this._getErrorMessage(e);this._showInputError(e,t)}}},{key:"_hasInvalidInput",value:function(e){return e.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(e,t){this._hasInvalidInput(e)?(t.classList.add(this._inactiveButtonClass),t.setAttribute("disabled",!0)):(t.classList.remove(this._inactiveButtonClass),t.removeAttribute("disabled"))}},{key:"_setEventListeners",value:function(){var e=this,t=Array.from(this._formElement.querySelectorAll(this._inputSelector)),n=this._formElement.querySelector(this._submitButtonSelector);t.forEach((function(r){e._toggleButtonState(t,n),r.addEventListener("input",(function(){e._checkInputValidity(r),e._toggleButtonState(t,n)}))}))}},{key:"enableValidation",value:function(){this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}}])&&n(t.prototype,r),e}();function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._element=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this),this._closePopupOverlay=this._closePopupOverlay.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){this._element.classList.add("popup_is-opened"),document.addEventListener("keyup",this._handleEscClose),this._element.addEventListener("click",this._closePopupOverlay)}},{key:"close",value:function(){this._element.classList.remove("popup_is-opened"),document.removeEventListener("keyup",this._handleEscClose),this._element.removeEventListener("click",this._closePopupOverlay)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"_closePopupOverlay",value:function(e){e.target===e.currentTarget&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._element.querySelector(".popup__close").addEventListener("click",(function(){e.close()}))}}])&&o(t.prototype,n),e}();function u(e){return(u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function c(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function a(e,t,n){return(a="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=f(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function l(e,t){return(l=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function s(e,t){return!t||"object"!==u(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function f(e){return(f=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var p=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&l(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=f(r);if(o){var n=f(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return s(this,e)});function u(e){var t,n=e.popupSelector,r=e.formSelector,o=e.handleFormSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,n))._form=document.querySelector(r),t._handleFormSubmit=o,t._formSelector=r,t}return t=u,(n=[{key:"_getInputValue",value:function(){var e=this;return this._formValue={},this._popupText=this._form.querySelectorAll(".popup__input"),this._popupText.forEach((function(t){e._formValue[t.name]=t.value})),this._formValue}},{key:"setEventListeners",value:function(){var e=this;a(f(u.prototype),"setEventListeners",this).call(this),this._form.addEventListener("click",(function(){})),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e._getInputValue()),e.close()}))}},{key:"close",value:function(){a(f(u.prototype),"close",this).call(this),this._form.reset()}}])&&c(t.prototype,n),u}(i);function h(e){return(h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function y(e,t,n){return(y="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=m(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function d(e,t){return(d=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function v(e,t){return!t||"object"!==h(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function m(e){return(m=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var b=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&d(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=m(r);if(o){var n=m(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return v(this,e)});function u(e){var t,n=e.popupSelector,r=e.imageSelector,o=e.figCaptionSelector;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,n))._image=document.querySelector(r),t._figCaption=document.querySelector(o),t}return t=u,(n=[{key:"open",value:function(e,t){y(m(u.prototype),"open",this).call(this),this._image.src=t,this._image.alt=e,this._figCaption.textContent=e}}])&&_(t.prototype,n),u}(i);function k(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var g=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderedItems=r,this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderItems",value:function(){var e=this;this._renderedItems.forEach((function(t){return e._renderer(t)}))}},{key:"addItem",value:function(e,t){t?this._container.prepend(e):this._container.append(e)}}])&&k(t.prototype,n),e}();function S(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var E=function(){function e(t){var n=t.name,r=t.description,o=t.avatar;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=n,this._description=r,this._avatar=o}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return this._userInfo={},this._userInfo.name=this._name.textContent,this._userInfo.description=this._description.textContent,this._userInfo.avatar=this._avatar.src,this._userInfo}},{key:"setUserInfo",value:function(e){e.name&&(this._name.textContent=e.name),e.about&&(this._description.textContent=e.about),e.avatar&&(this._avatar.src=e.avatar)}}])&&S(t.prototype,n),e}();function w(e){return(w="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function C(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function O(e,t,n){return(O="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=j(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function L(e,t){return(L=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function I(e,t){return!t||"object"!==w(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function j(e){return(j=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var q=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&L(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=j(r);if(o){var n=j(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return I(this,e)});function u(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),i.call(this,e)}return t=u,(n=[{key:"setConfirmation",value:function(e){this._handleConfirmCallback=e}},{key:"setEventListeners",value:function(){var e=this;O(j(u.prototype),"setEventListeners",this).call(this),this._element.querySelector(".popup__content_delete").addEventListener("submit",(function(t){t.preventDefault(),e._handleConfirmCallback()}))}}])&&C(t.prototype,n),u}(i);function P(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var R=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._cohort=t.cohort,this._authorization=t.authorization,this._url=t.url,this._id=t.id}var t,n;return t=e,(n=[{key:"_checkResponse",value:function(e){return e.ok?e.json():Promise.reject(e.status)}},{key:"getInitialCards",value:function(){var e=this;return fetch(this._url+"/cards",{headers:{authorization:this._authorization}}).then((function(t){return e._checkResponse(t)}))}},{key:"getUserInfo",value:function(){var e=this;return fetch(this._url+"/users/me",{headers:{authorization:this._authorization}}).then((function(t){return e._checkResponse(t)}))}},{key:"changeUserInfo",value:function(e){var t=this;return fetch(this._url+"/users/me",{method:"PATCH",headers:{authorization:this._authorization,"Content-Type":"application/json"},body:JSON.stringify(e)}).then((function(e){return t._checkResponse(e)}))}},{key:"addNewCard",value:function(e,t){var n=this;return fetch(this._url+"/cards",{method:"POST",headers:{authorization:this._authorization,"Content-Type":"application/json"},body:JSON.stringify({name:e,link:t})}).then((function(e){return n._checkResponse(e)}))}},{key:"deleteCard",value:function(e){var t=this;return fetch(this._url+"/cards/"+e,{method:"DELETE",headers:{authorization:this._authorization,"Content-Type":"application/json"}}).then((function(e){return t._checkResponse(e)}))}},{key:"addLike",value:function(e){var t=this;return fetch(this._url+"/cards/likes/"+e,{method:"PUT",headers:{authorization:this._authorization,"Content-Type":"application/json"}}).then((function(e){return t._checkResponse(e)}))}},{key:"removeLike",value:function(e){var t=this;return fetch(this._url+"/cards/likes/"+e,{method:"DELETE",headers:{authorization:this._authorization,"Content-Type":"application/json"}}).then((function(e){return t._checkResponse(e)}))}},{key:"changeAvatar",value:function(e){var t=this;return fetch(this._url+"/users/me/avatar",{method:"PATCH",headers:{authorization:this._authorization,"Content-Type":"application/json"},body:JSON.stringify({avatar:e})}).then((function(e){return t._checkResponse(e)}))}}])&&P(t.prototype,n),e}(),T={cohort:"cohort-17",authorization:"7a56e95e-8f95-4549-9d80-3f9b7d7f6e6c",url:"https://mesto.nomoreparties.co/v1/cohort-17"},x={formSelector:".popup__content_edit",inputSelector:".popup__input",submitButtonSelector:".popup__save",inactiveButtonClass:"popup__save_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_active"},z=document.querySelector(".popup__content_add"),A=document.querySelector(".popup__content_edit"),B=document.querySelector(".popup__content_avatar"),D=document.querySelector(".popup_type_edit"),U=document.querySelector(".popup_type_add"),V=document.querySelector(".popup_type_edit-photo"),F=document.querySelector(".profile__add-btn"),N=document.querySelector(".profile__edit-btn"),H=(U.querySelector(".popup__close"),document.querySelector(".popup_type_photo")),M=(H.querySelector(".popup__image_type_photo"),H.querySelector(".popup__title_type_photo"),document.querySelector(".profile__image-wrap")),J=new R(T),$=".popup__input",G=".popup__content_add",K=".popup__content_edit",Q=".popup__content_avatar",W=document.querySelector(".popup__submit"),X=document.querySelector(".popup__text_name"),Y=document.querySelector(".popup__text_job"),Z=document.querySelector(".profile__title"),ee=document.querySelector(".profile__subtitle"),te=document.querySelector(".profile__image");function ne(e,t){document.querySelector(e).querySelector(".popup__save").textContent=t}function re(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,i=void 0;try{for(var u,c=e[Symbol.iterator]();!(r=(u=c.next()).done)&&(n.push(u.value),!t||n.length!==t);r=!0);}catch(e){o=!0,i=e}finally{try{r||null==c.return||c.return()}finally{if(o)throw i}}return n}}(e,t)||function(e,t){if(e){if("string"==typeof e)return oe(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?oe(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function oe(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}Promise.all([J.getInitialCards(),J.getUserInfo()]).then((function(e){var t=re(e,2),n=t[0],r=t[1];n.forEach((function(e){var t=se(e,r);fe.addItem(t.getElement())})),T.id=r._id,de.setUserInfo(r)})).catch((function(){return console.error("Ошибка")}));var ie=V.querySelectorAll($);function ue(e){var t=this;J.removeLike(e).then((function(e){t.switchLikes(e.likes.length)})).catch((function(){return console.error("Ошибка")}))}function ce(e){me.open(),me.setConfirmation((function(){J.deleteCard(e.id()).then((function(){e.deleteHandler(),me.close()})).catch((function(){return console.error("Ошибка")}))}))}function ae(e){var t=this;J.addLike(e).then((function(e){t.switchLikes(e.likes.length)})).catch((function(){return console.error("Ошибка")}))}function le(e,t){pe.open(e,t)}M.addEventListener("click",(function(){return ie.forEach((function(e){Se.hideInputError(e)})),void be.open()}));var se=function(e,n){return new t(e.name,e.link,e._id,e.owner._id,e.likes,n._id,le,ce,ue,ae,".element-template")},fe=new g({items:[],renderer:function(e){fe.addItem(se(e).getElement())}},".elements"),pe=new b({popupSelector:".popup_type_photo",imageSelector:".popup__image_type_photo",figCaptionSelector:".popup__title_type_photo"});pe.setEventListeners();var he=new p({popupSelector:".popup_type_add",formSelector:G,handleFormSubmit:function(e){ne(G,"Сохранение..."),Promise.all([J.addNewCard(e["place-name"],e["place-link"]),J.getUserInfo()]).then((function(e){var t=re(e,2),n=t[0],r=t[1];fe.addItem(se(n,r).getElement(),!0)})).catch((function(){return console.error("Ошибка")})).finally((function(){return ne(G,"Создать")}))}}),_e=U.querySelectorAll($);he.setEventListeners(),F.addEventListener("click",(function(){_e.forEach((function(e){ge.hideInputError(e)})),he.open(),W.setAttribute("disabled",!0)}));var ye=new p({popupSelector:".popup_type_edit",formSelector:K,handleFormSubmit:function(e){ne(K,"Сохранение..."),J.changeUserInfo(e).then((function(e){return de.setUserInfo(e)})).catch((function(){return console.error("Ошибка")})).finally((function(){return ne(K,"Сохранить")}))}}),de=new E({name:Z,description:ee,avatar:te}),ve=D.querySelectorAll($);ye.setEventListeners(),N.addEventListener("click",(function(){ve.forEach((function(e){ke.hideInputError(e)})),ye.open(),X.value=de.getUserInfo().name,Y.value=de.getUserInfo().description}));var me=new q(".popup_type_delete");me.setEventListeners();var be=new p({popupSelector:".popup_type_edit-photo",formSelector:Q,handleFormSubmit:function(e){ne(Q,"Сохранение..."),J.changeAvatar(e.avatar).then((function(e){return de.setUserInfo(e)})).catch((function(){return console.error("Ошибка")})).finally((function(){return ne(Q,"Сохранить")}))}});be.setEventListeners();var ke=new r(x,A);ke.enableValidation();var ge=new r(x,z);ge.enableValidation();var Se=new r(x,B);Se.enableValidation()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,